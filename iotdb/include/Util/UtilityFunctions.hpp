#ifndef UTILITY_FUNCTIONS_HPP
#define UTILITY_FUNCTIONS_HPP

#include <API/InputQuery.hpp>
#include <string>

/**
 * @brief a collection of shared utility functions
 */
namespace NES {

class UtilityFunctions {
  public:
    // removes leading and trailing whitespaces
    static std::string trim(std::string s);

    /**
   *  @brief this function **executes** the code provided by the user and returns an InputQuery Object
   *  @caution: this function will replace the stream name "xyz" provided by the user with the stream generated by the system and fetched from the catalog
   *  @param query as a string
   *  @return Smart pointer to InputQuery object of the query
   *  */
    static InputQueryPtr createQueryFromCodeString(
        const std::string& query_code_snippet);

    /**
   *  @brief this function **executes** the code provided by the user and returns an schema Object
   *  @param query as a string
   *  @return Smart pointer to InputQuery object of the query
   *  */
    static SchemaPtr createSchemaFromCode(const std::string& query_code_snippet);

    /**
   * @brief this function creates a UUID string
   * @return the UUID string
   */
    static std::string generateUuid();

    /**
   * @brief get the first substring between a unique first delimiter and a non-unique second delimiter
   * @param input
   * @param delimiter1
   * @param delimiter2
   * @return the substring
   */
    static std::string getFirstStringBetweenTwoDelimiters(const std::string& input, std::string s1, std::string s2);
};
}// namespace NES

#endif /* UTILITY_FUNCTIONS_HPP */
