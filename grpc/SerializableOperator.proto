syntax = "proto3";
import "google/protobuf/any.proto";
import "SerializableExpression.proto";
package NES;


/**
The serializable wrapper for a schema object
 */
message SerializableSchema{
  repeated SerializableField fields = 1;
}

/*
The serializable wrapper definition for operator nodes
 */
message SerializableOperator{

  /**
  Source Details contains properties for the source operator, such as the source descriptor
   */
  message SourceDetails {
    message SerializableBinarySourceDescriptor {
      string filePath = 1;
      SerializableSchema sourceSchema = 2;
    }

    message SerializableCsvSourceDescriptor {
      string filePath = 1;
      string delimiter = 2;
      uint64 numBuffersToProcess = 3;
      uint64 frequency = 4;
      SerializableSchema sourceSchema = 5;
    }

    message SerializableDefaultSourceDescriptor {
      uint64 numBuffersToProcess = 1;
      uint64 frequency = 2;
      SerializableSchema sourceSchema = 3;
    }

    message SerializableKafkaSourceDescriptor {
      string brokers = 1;
      string topic = 2;
      string groupId = 3;
      bool autoCommit = 4;
      uint64 kafkaConnectTimeout = 5;
      SerializableSchema sourceSchema = 6;
    }

    message SerializableLogicalStreamSourceDescriptor {
      string streamName = 1;
    }

    message SerializableSenseSourceDescriptor {
      string udfs = 1;
      SerializableSchema sourceSchema = 2;
    }

    message SerializableZMQSourceDescriptor {
      string host = 1;
      uint32 port = 2;
      SerializableSchema sourceSchema = 3;
    }
    google.protobuf.Any sourceDescriptor = 1;
  }

  /**
  Sink Details contains properties for the sink operator, such as the sink descriptor
  */
  message SinkDetails {
    message SerializableFileSinkDescriptor {
      enum FileOutputType{
        BINARY_TYPE = 0;
        CSV_TYPE = 1;
      }

      enum FileOutputMode{
        FILE_OVERWRITE = 0;
        FILE_APPEND = 1;
      }
      string filePath = 1;
      FileOutputMode fileOutputMode = 2;
      FileOutputType fileOutputType = 3;
    }

    message SerializableKafkaSinkDescriptor {
      string topic = 1;
      string brokers = 2;
      uint64 kafkaConnectTimeout = 5;
    }

    message SerializablePrintSinkDescriptor {
    }

    message SerializableZMQSinkDescriptor {
      string host = 1;
      uint32 port = 2;
    }
    google.protobuf.Any sinkDescriptor = 1;
  }

  /**
  Map Details contains properties for the map operator, such as the field assignment expression
  */
  message MapDetails {
    SerializableExpression expression = 1;
  }

  /**
   Filter Details contains properties for the filter operator, such as the filter predicate expression
 */
  message FilterDetails {
    SerializableExpression predicate = 1;
  }

  google.protobuf.Any details = 1;
  repeated SerializableOperator children = 2;
  SerializableSchema inputSchema = 3;
  SerializableSchema outputSchema = 4;
  uint64 operatorId = 5;
}